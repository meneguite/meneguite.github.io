{"pages":[{"title":"Sobre","text":"Mais sobre mim","link":"/about/index.html"}],"posts":[{"title":"GoLang, desbravando uma linguagem de programa√ß√£o‚Ää‚Äî‚ÄäParte 3 (Final)","text":"Este artigo √© a terceira e ultima parte de uma sequ√™ncia de artigos sobre meu processo de aprendizado de uma nova linguagem de programa√ß√£o, nessa s√©rie tenho o objetivo de documentar esse processo na esperan√ßa de talvez poder ajudar algu√©m, n√£o s√≥ aprender a pr√≥pria linguagem Go, como qualquer outra linguagem de programa√ß√£o. A parte 1 dessa s√©rie pode ser lida aqui e a parte 2 aqui.","link":"/2017/11/15/golang-desbravando-uma-linguagem-de-programacao-parte-3/"},{"title":"GoLang, desbravando uma linguagem de programa√ß√£o - Parte 2","text":"Este artigo √© a segunda parte de uma sequ√™ncia de artigos sobre meu processo de aprendizado de uma nova linguagem de programa√ß√£o, nessa s√©rie tenho o objetivo de documentar esse processo na esperan√ßa de talvez poder ajudar algu√©m, n√£o s√≥ aprender a pr√≥pria linguagem Go, como qualquer outra linguagem de programa√ß√£o. A parte 1 dessa s√©rie pode ser lida aqui.","link":"/2017/10/08/golang-desbravando-uma-linguagem-de-programacao-parte-2/"},{"title":"GoLang, desbravando uma linguagem de programa√ß√£o - Parte 1","text":"J√° faz muito tempo que n√£o escrevo um artigo, mas j√° fazia algum tempo que queria voltar a escreve-los. Hoje resolvi aprender uma nova linguagem de programa√ß√£o e tamb√©m documentar esse processo na esperan√ßa de talvez poder ajudar algu√©m, n√£o s√≥ aprender a pr√≥pria linguagem Go, como qualquer outra linguagem de programa√ß√£o. Esta s√©rie de artigos n√£o tem a pretens√£o de ser um guia definitivo, ou um super manual da linguagem, mas sim descrever como eu aprendo uma nova linguagem, pontos importantes e minhas impress√µes da mesma. Bom ent√£o vamos l√°‚Ä¶","link":"/2017/10/01/golang-desbravando-uma-linguagem-de-programacao-parte-1/"},{"title":"Publicando um site de forma profissional com Github Pages e CloudFlare","text":"Nesse artigo pretendo apresentar como publicar um site est√°tico com dom√≠nio pr√≥prio, HTTPS, Cache, prote√ß√£o DDOS e o melhor, de forma totalmente gratuita usando Github Pages e CloudFlare. Essas instru√ß√µes s√£o tamb√©m v√°lidas para aplica√ß√µes mais complexas como uma SPA (Single Page Application) por exemplo. J√° a algum tempo percebo que muitas pessoas usam linguagens din√¢micas para produ√ß√£o de sites est√°ticos, pela simples motiva√ß√£o de buscar um reaproveitamento do c√≥digo, j√° vi e at√© mesmo j√° fiz isso. Hoje com o frontend cada vez mais inteligente podemos gerar interfaces extremamente ricas sem ao menos a necessidade de um servidor din√¢mico pr√≥prio, apenas servindo HTML de forma est√°tica e deixando toda interatividade do lado do cliente. Hoje, at√© mesmo plataformas como o Wordpress, Joomla e Drupal podem ser substitu√≠das, em alguns casos, por geradores de sites est√°ticos como Jekyll, Hexo, ou Hugo por exemplo, que a partir de dados din√¢micos podem gerar sites ‚Äúest√°ticos‚Äù e reduzir consideravelmente o custo com servidores din√¢micos, escalando aplica√ß√µes de uma forma muito mais simples, com uma performance incr√≠vel e um custo de hospedagem m√≠nimo, ou como no exemplo desse artigo, a custo zero. Entenda que n√£o estou de forma alguma dizendo que sites est√°ticos s√£o a bala de prata para resolver todos os seus problemas, mas sem d√∫vida ter uma vis√£o sobre eles e perceber o valor dessa abordagem em alguns momentos pode ser um diferencial em sua carreira. Pensando nisso e para atender alguns questionamentos que vinham me fazendo h√° algum tempo, resolvi escrever este artigo, que pretende demonstrar uma forma muito simples de publicar um site de forma profissional e totalmente gratuita, com dom√≠nio pr√≥prio, deploy automatizado, cache habilitado, prote√ß√£o DDOS, certificado HTTPS v√°lido e muitas outras demandas de um site realmente profissional. Para atender essa demanda, vamos nos utilizar de uma composi√ß√£o de ferramentas muito conhecidas no mercado, como o Github Pages e Cloudflare para prover toda a estrutura necess√°ria para disponibilizar nosso site na internet. Para entender todo o conte√∫do desse artigo √© importante possuir conhecimentos b√°sicos de versionamento usando o Git, e o ter instalado em sua m√°quina para que possa interagir com o github. Al√©m disso vai precisar de uma conta no Github e uma no CloudFlare, caso n√£o tenha pode providenciar com bastante facilidade, pois s√£o ambas gratuitas e muito √∫teis para um desenvolvedor. Criando um reposit√≥rio no Github PagesO primeiro passo para iniciarmos, √© criar um reposit√≥rio ao qual ir√° hospedar nosso site junto ao github, pressuponho que j√° tenha uma conta por l√°, mas caso n√£o tenha ainda √© bem tranquilo de cadastrar uma, e para projetos p√∫blicos √© totalmente gratuita. J√° logado em sua conta voc√™ ira criar um novo reposit√≥rio no canto superior direito, como pode ser visto nas imagens abaixo: Escolha um prefixo v√°lido e √∫nico dentro do dom√≠nio github.io, para esse exemplo vou usar meu dom√≠nio pessoal que por completa falta de tempo est√° abandonado mesmo üòÑ. Ap√≥s esse processo ir√° visualizar uma tela similar a essa: Agora precisamos iniciar nosso reposit√≥rio para habilit√°-lo no github pages, para isso vamos seguir os comandos para inicializar nosso reposit√≥rio. 123456echo \"# My personal site\" &gt;&gt; README.mdgit initgit add README.mdgit commit -m \"First Commit\"git remote add origin git@github.com:meneguite/meneguite.github.io.gitgit push -u origin master Ap√≥s esse processo, √© esperado que ao acessar seu reposit√≥rio novamente visualize algo como: Agora j√° estamos prontos, se acessar seu endere√ßo, no meu caso https://meneguite.github.io, j√° deve encontrar seu site j√° com https rodando normalmente. Assim √© hora de avan√ßar :). Preparando o site ao qual iremos publicarO segundo passo em nossa jornada ser√° obter um site est√°tico para usarmos de exemplo, durante esse artigo usarei o Hielo (https://templated.co/hielo), um template gratuito que utilizarei apenas para demonstrar a publica√ß√£o durante esse artigo. Pelo link https://templated.co/hielo/download baixei um arquivo zip que descompactei na pasta do projeto e removi o arquivo inicial README.md que criamos no passo anterior para testes. A estrutura dos arquivos ficou assim: Agora vamos atualizar nosso reposit√≥rio e publicar nosso novo site, para isso executaremos os seguintes comandos: 123git add .git commit -m \"Include new site implementation\"git push -u origin master Com esses comandos acima voc√™ j√° tem um deploy automatizado, bastando atualizar seu reposit√≥rio e seu site j√° estar√° atualizado. Prontinho, nosso site j√° est√° no ar e completamente funcional, j√° √© um endere√ßo v√°lido e se n√£o possuir um dom√≠nio pr√≥prio j√° pode usar dessa forma sem maiores problemas. Configurando o DNS do seu dom√≠nio na CloudflareAgora precisamos de uma conta na CloudFlare, √© um cadastro bastante simples, n√£o ter√° nenhum problema em seguir o fluxo de cadastro deles, assim que terminar o processo ir√° entrar no dashboard onde poder√° cadastrar seus dom√≠nios como imagem abaixo: Ao clicar em ‚Äú+ Add Site‚Äù seguir√° o seguinte fluxo: Selecione o plano mais indicado para a sua necessidade: E confirmar o plano selecionado novamente : Se j√° usa seu dom√≠nio em outro provedor de DNS nesse momento a CloudFlare ir√° buscar todos os registros atuais para que possa administra-los dentro de sua conta, no meu caso eu removi todos os registros do DNS o que deixou da seguinte forma: Agora precisamos adicionar dois registros, seu dom√≠nio principal e um para o subdom√≠nio www, assim independente da forma que vier o acesso o mesmo ser√° redirecionado corretamente. Eles devem ficar assim: A CloudFlare tem uma feature bem bacana no seu DNS chamada de CNAME Flattening que possibilita criar um CNAME para o root de um dom√≠nio. (Pode ler mais informa√ß√µes sobre isso em https://support.cloudflare.com/hc/en-us/articles/200169056-CNAME-Flattening-RFC-compliant-support-for-CNAME-at-the-root) Ap√≥s configurado ser√° lhe apresentado a seguinte tela: Nessa tela recebemos a solicita√ß√£o de alterar o endere√ßo de DNS junto ao nosso provedor do dom√≠nio. Esse passo varia de acordo com cada provedor, mas normalmente √© bastante simples.. basta alterar o endere√ßo dos servidores de DNS atuais para esses novos endere√ßos. ** Precisa se atentar que est√° transferindo o DNS autoritativo para o servi√ßo do CloudFlare e precisa ajustar registros como o MX para que n√£o tenha nenhum problema na migra√ß√£o de seus e-mails por exemplo. Ap√≥s alterar os endere√ßos de DNS junto ao seu provedor, a propaga√ß√£o do mesmo pode demorar um tempo para acontecer, no caso do registro.br √© indicado que pode demorar at√© 2 horas para essa transi√ß√£o. Ajustes finais para nosso dom√≠nioAinda dentro da cloudflare vamos acessar nosso dom√≠nio para finalizar alguns configura√ß√µes adicionais bem importantes. A primeira aba que vamos alterar √© a de Crypto. Dentro dessa aba devemos nos certificar que est√° configurado para Full, esse j√° √© o padr√£o e provavelmente n√£o tera que alterar nada. Ap√≥s esse processo devemos habilitar o redirecionamento de HTTP para HTTPS por padr√£o, assim qualquer acesso vindo ao nosso site ser√° redirecionado. Otimiza√ß√µes na entrega de conte√∫doAp√≥s as configura√ß√µes b√°sicas passadas acima existem outras que podemos fazer para otimizar nosso site, esses passos s√£o opcionais, mas podem ajudar bastante a aumentar a performance de sua aplica√ß√£o. Na aba Speed, vamos encontrar algumas configura√ß√µes para otimizar a entrega de conte√∫do, a principal delas √© a minifica√ß√£o dos assets de sua aplica√ß√£o de forma autom√°tica, o que √© extremamente √∫til. Existem diversas outras op√ß√µes muito interessantes como o Rate Limiting que fica na aba de Firewall, que pode ser configurado tamb√©m mas que n√£o s√£o t√£o importantes nesse momento, mas n√£o deixe de dar uma olhada com mais calma em todas as op√ß√µes que a CloudFlare disponibiliza. Ap√≥s conclu√≠da a migra√ß√£o do DNS √© esperado que seja mostrado essa mensagem na tela inicial do seu dom√≠nio dentro CloudFlare. Migrando sua Github Page para seu dom√≠nio definitivoAp√≥s finalizada a configura√ß√£o necess√°ria dentro da CloudFlare chegou a hora de transferir sua Github Page para o seu dom√≠nio. O processo √© bastante simples, dentro do seu reposit√≥rio no Github acesse a aba Settings, alterando em Custom domain para seu dom√≠nio como abaixo: Tudo correndo bem no processo, j√° temos nosso site no ar com o certificado SSL implementado, e com toda infraestrutura necess√°ria para um site de pequeno e at√© de m√©dio porte. Por hoje √© isso, espero que esse artigo lhe seja √∫til. Qualquer d√∫vida ou sugest√µes de melhora deixe aqui nos coment√°rios.","link":"/2018/11/10/publish-site-with-github-pages-cloudflare/"}],"tags":[{"name":"Golang","slug":"Golang","link":"/tags/Golang/"},{"name":"Programa√ß√£o","slug":"Programacao","link":"/tags/Programacao/"},{"name":"Backend","slug":"Backend","link":"/tags/Backend/"},{"name":"Frontend","slug":"Frontend","link":"/tags/Frontend/"},{"name":"Cloudflare","slug":"Cloudflare","link":"/tags/Cloudflare/"},{"name":"Github Pages","slug":"Github-Pages","link":"/tags/Github-Pages/"}],"categories":[{"name":"Desenvolvimento","slug":"Desenvolvimento","link":"/categories/Desenvolvimento/"},{"name":"Infraestrutura","slug":"Infraestrutura","link":"/categories/Infraestrutura/"}]}